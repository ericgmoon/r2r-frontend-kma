// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly when active 1`] = `
<View
  pointerEvents="auto"
>
  <View
    style={
      Object {
        "borderRadius": 36,
        "overflow": "hidden",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#DF6A6A",
            "borderColor": "#2089dc",
            "borderRadius": 36,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 12,
              "fontWeight": "700",
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          chip
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders correctly when active with custom active colour 1`] = `
<View
  pointerEvents="auto"
>
  <View
    style={
      Object {
        "borderRadius": 36,
        "overflow": "hidden",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffdb58",
            "borderColor": "#2089dc",
            "borderRadius": 36,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 12,
              "fontWeight": "700",
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          chip
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders correctly when static 1`] = `
<View
  pointerEvents="none"
>
  <View
    style={
      Object {
        "borderRadius": 36,
        "overflow": "hidden",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "borderColor": "#2089dc",
            "borderRadius": 36,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "black",
              "fontSize": 12,
              "fontWeight": "700",
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          chip
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders correctly with custom styles 1`] = `
<View
  pointerEvents="auto"
>
  <View
    style={
      Object {
        "borderRadius": 36,
        "overflow": "hidden",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "borderColor": "#2089dc",
            "borderRadius": 36,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingBottom": 8,
            "paddingButton": 32,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 32,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "black",
              "fontSize": 12,
              "fontWeight": "700",
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          chip
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders correctly with label 1`] = `
<View
  pointerEvents="auto"
>
  <View
    style={
      Object {
        "borderRadius": 36,
        "overflow": "hidden",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "borderColor": "#2089dc",
            "borderRadius": 36,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "black",
              "fontSize": 12,
              "fontWeight": "700",
              "paddingVertical": 1,
              "textAlign": "center",
            }
          }
        >
          chip
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders correctly without props 1`] = `
<View
  pointerEvents="auto"
>
  <View
    style={
      Object {
        "borderRadius": 36,
        "overflow": "hidden",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": false,
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "borderColor": "#2089dc",
            "borderRadius": 36,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "padding": 8,
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      />
    </View>
  </View>
</View>
`;
